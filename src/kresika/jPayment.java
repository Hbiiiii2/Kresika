/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package kresika;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.NumberFormat;
import java.util.Locale;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;

/**
 *
 * @author Administrator
 */
public class jPayment extends javax.swing.JFrame {

    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(jPayment.class.getName());
    private double totalHargaDiterima;
    private String namaDiterima;
    private String emailDiterima;
    private int jumlahTiketDiterima;
    private String trainCodeDiterima;
    private int idJadwalDiterima;

    /**
     * Creates new form jPayment
     */
    public jPayment() {
        initComponents();
        setTitle("Rincian Pembayaran (No Data)");
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        jChangeDue.setText("Rp 0");
    }

    public jPayment(String nama, String email, int jumlahTiket, double totalHarga, String namaKereta, String rute, String waktuBerangkat, String kelas, String trainCode) {
        initComponents(); // Inisialisasi komponen UI

        // Simpan data yang diterima
        this.namaDiterima = nama;
        this.emailDiterima = email;
        this.jumlahTiketDiterima = jumlahTiket;
        this.totalHargaDiterima = totalHarga;
        this.trainCodeDiterima = trainCode;


        // Tampilkan data di UI
        NumberFormat formatter = NumberFormat.getCurrencyInstance(new Locale("id", "ID"));
        jName.setText(this.namaDiterima);
        jEmail.setText(this.emailDiterima);
        jNumberTicket.setText(String.valueOf(this.jumlahTiketDiterima));
        jSeatClass.setText(kelas);
        if (rute != null && rute.contains(" - ")) {
            // Memisahkan string berdasarkan " - " dan mengambil bagian kedua (indeks 1)
            String tujuanSaja = rute.split(" - ")[1].trim();
            jTujuan1.setText(tujuanSaja);
        } else {
            // Fallback jika format rute tidak seperti yang diharapkan
            jTujuan1.setText(rute);
        }
        jTotalPayment.setText(formatter.format(this.totalHargaDiterima));
        jChangeDue.setText("Rp 0");
        jClassTicket.setText(namaKereta);

        // Logika kembalian otomatis
        addCashReceivedListener();

        // Atur properti window
        setTitle("Rincian Pembayaran");
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setLocationRelativeTo(null);
    }

    private void addCashReceivedListener() {
        jChashReceived.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                calculateChange();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                calculateChange();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                calculateChange();
            }
        });
    }

    private void calculateChange() {
        String cashText = jChashReceived.getText();
        if (cashText.isEmpty()) {
            jChangeDue.setText("Rp 0");
            return;
        }
        try {
            double cashReceived = Double.parseDouble(cashText);
            double changeDue = cashReceived - this.totalHargaDiterima;
            NumberFormat formatter = NumberFormat.getCurrencyInstance(new Locale("id", "ID"));
            jChangeDue.setText(formatter.format(changeDue));
        } catch (NumberFormatException ex) {
            jChangeDue.setText("Input tidak valid");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTotalPayment = new javax.swing.JLabel();
        jName = new javax.swing.JLabel();
        jNumberTicket = new javax.swing.JLabel();
        jEmail = new javax.swing.JLabel();
        jSeatClass = new javax.swing.JLabel();
        jChangeDue = new javax.swing.JLabel();
        jChashReceived = new javax.swing.JTextField();
        jTujuan1 = new javax.swing.JLabel();
        jBack = new javax.swing.JButton();
        jPayBtn = new javax.swing.JButton();
        jClassTicket = new javax.swing.JLabel();
        jBackground = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTotalPayment.setFont(new java.awt.Font("Baloo Da 2", 1, 36)); // NOI18N
        jTotalPayment.setText("jLabel2");
        jTotalPayment.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        getContentPane().add(jTotalPayment, new org.netbeans.lib.awtextra.AbsoluteConstraints(1150, 480, 240, 50));

        jName.setFont(new java.awt.Font("Baloo Da 2", 0, 24)); // NOI18N
        jName.setText("jLabel2");
        jName.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        getContentPane().add(jName, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 290, 330, 30));

        jNumberTicket.setFont(new java.awt.Font("Baloo Da 2", 0, 24)); // NOI18N
        jNumberTicket.setText("jLabel2");
        jNumberTicket.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        getContentPane().add(jNumberTicket, new org.netbeans.lib.awtextra.AbsoluteConstraints(1160, 290, 330, 30));

        jEmail.setFont(new java.awt.Font("Baloo Da 2", 0, 24)); // NOI18N
        jEmail.setText("jLabel2");
        jEmail.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        getContentPane().add(jEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 350, 330, -1));

        jSeatClass.setFont(new java.awt.Font("Baloo Da 2", 0, 24)); // NOI18N
        jSeatClass.setText("jLabel2");
        jSeatClass.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        getContentPane().add(jSeatClass, new org.netbeans.lib.awtextra.AbsoluteConstraints(1120, 350, 330, 30));

        jChangeDue.setFont(new java.awt.Font("Baloo Da 2", 0, 24)); // NOI18N
        jChangeDue.setText("jLabel2");
        jChangeDue.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        getContentPane().add(jChangeDue, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 750, 500, 70));
        getContentPane().add(jChashReceived, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 752, 320, 40));

        jTujuan1.setFont(new java.awt.Font("Baloo Da 2", 1, 36)); // NOI18N
        jTujuan1.setText("jLabel2");
        jTujuan1.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        getContentPane().add(jTujuan1, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 480, 240, 60));

        jBack.setContentAreaFilled(false);
        jBack.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        getContentPane().add(jBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 930, 330, 100));

        jPayBtn.setContentAreaFilled(false);
        jPayBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPayBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPayBtnActionPerformed(evt);
            }
        });
        getContentPane().add(jPayBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(1260, 933, 350, 100));

        jClassTicket.setFont(new java.awt.Font("Baloo Da 2", 1, 36)); // NOI18N
        jClassTicket.setText("jLabel1");
        getContentPane().add(jClassTicket, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 200, 200, 40));

        jBackground.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/PaymentD.png"))); // NOI18N
        getContentPane().add(jBackground, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jPayBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPayBtnActionPerformed
        // 1. Validasi input uang tunai
        double cashReceived;
        try {
            cashReceived = Double.parseDouble(jChashReceived.getText());
            if (cashReceived < this.totalHargaDiterima) {
                JOptionPane.showMessageDialog(this, "Uang tunai yang diterima kurang dari total pembayaran!", "Peringatan", JOptionPane.WARNING_MESSAGE);
                return;
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Input uang tunai tidak valid!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        Connection conn = null;
        try {
            // 2. Dapatkan koneksi dan mulai transaksi
            koneksi.connect();
            conn = koneksi.con;
            conn.setAutoCommit(false); // Memulai mode transaksi

            // 3. Cari id_jadwal berdasarkan train_code
            String sqlGetJadwal = "SELECT id_jadwal FROM schedules WHERE train_code = '" + this.trainCodeDiterima + "'";
            Statement stm = conn.createStatement();
            ResultSet rs = stm.executeQuery(sqlGetJadwal);
            if (rs.next()) {
                this.idJadwalDiterima = rs.getInt("id_jadwal");
            } else {
                throw new SQLException("Jadwal dengan Train Code " + this.trainCodeDiterima + " tidak ditemukan.");
            }

            // 4. Kurangi sisa kursi di tabel schedules
            String sqlUpdateKursi = "UPDATE schedules SET sisa_kursi = sisa_kursi - ? WHERE id_jadwal = ? AND sisa_kursi >= ?";
            PreparedStatement pstUpdate = conn.prepareStatement(sqlUpdateKursi);
            pstUpdate.setInt(1, this.jumlahTiketDiterima);
            pstUpdate.setInt(2, this.idJadwalDiterima);
            pstUpdate.setInt(3, this.jumlahTiketDiterima);
            int rowsAffected = pstUpdate.executeUpdate();
            if (rowsAffected == 0) {
                throw new SQLException("Gagal mengupdate kursi, kemungkinan kursi tidak mencukupi.");
            }

            // 5. Simpan data pemesanan ke tabel bookings
            String sqlInsertBooking = "INSERT INTO bookings (kode_pemesanan, id_jadwal, nama_pemesan, email_pemesan, jumlah_tiket, total_harga, barcode) VALUES (?, ?, ?, ?, ?, ?, ?)";
            PreparedStatement pstInsert = conn.prepareStatement(sqlInsertBooking);

            String kodePemesanan = "KRSK-" + System.currentTimeMillis();
            String dataBarcode = kodePemesanan + "-" + this.trainCodeDiterima; // Membuat data untuk barcode

            pstInsert.setString(1, kodePemesanan);
            pstInsert.setInt(2, this.idJadwalDiterima);
            pstInsert.setString(3, this.namaDiterima);
            pstInsert.setString(4, this.emailDiterima);
            pstInsert.setInt(5, this.jumlahTiketDiterima);
            pstInsert.setDouble(6, this.totalHargaDiterima);
            pstInsert.setString(7, dataBarcode); // Menyimpan data barcode
            pstInsert.executeUpdate();

            // Jika semua query berhasil, commit transaksi
            conn.commit();

            // 6. Tampilkan pop-up sukses
            JOptionPane.showMessageDialog(this, "Payment Successful!", "Sukses", JOptionPane.INFORMATION_MESSAGE);

            // 7. Tutup form dan kembali ke halaman utama
            new jAvailabelDate().setVisible(true); // Ganti dengan halaman yang sesuai
            this.dispose();

        } catch (SQLException e) {
            // Jika terjadi error, batalkan semua perubahan (rollback)
            try {
                if (conn != null) {
                    conn.rollback();
                }
            } catch (SQLException ex) {
                logger.log(java.util.logging.Level.SEVERE, "Rollback gagal: " + ex.getMessage());
            }
            JOptionPane.showMessageDialog(this, "Terjadi kesalahan saat menyimpan data: " + e.getMessage(), "Error Database", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        } finally {
            // Kembalikan koneksi ke mode auto-commit
            try {
                if (conn != null) {
                    conn.setAutoCommit(true);
                }
            } catch (SQLException ex) {
                logger.log(java.util.logging.Level.SEVERE, "Gagal mengembalikan auto-commit: " + ex.getMessage());
            }
        }
    }//GEN-LAST:event_jPayBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new jPayment().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBack;
    private javax.swing.JLabel jBackground;
    private javax.swing.JLabel jChangeDue;
    private javax.swing.JTextField jChashReceived;
    private javax.swing.JLabel jClassTicket;
    private javax.swing.JLabel jEmail;
    private javax.swing.JLabel jName;
    private javax.swing.JLabel jNumberTicket;
    private javax.swing.JButton jPayBtn;
    private javax.swing.JLabel jSeatClass;
    private javax.swing.JLabel jTotalPayment;
    private javax.swing.JLabel jTujuan1;
    // End of variables declaration//GEN-END:variables
}
