/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package kresika;

import javax.swing.JOptionPane;
import javax.swing.table.*;
import java.sql.*;

/**
 *
 * @author Administrator
 */
public class jAvailabelDate extends javax.swing.JFrame {

    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(jAvailabelDate.class.getName());

    private void load_Table() {
        // Membuat objek DefaultTableModel
        DefaultTableModel model = new DefaultTableModel();
        // Menambahkan kolom ke model
        model.addColumn("No.");
        model.addColumn("Nama Kereta");
        model.addColumn("Tujuan");
        model.addColumn("Kelas");
        model.addColumn("Waktu Berangkat");
        model.addColumn("Sisa Kursi");
//        model.addColumn("Train Code");

        try {
            int no = 1;
            // Query SQL untuk mengambil data dengan JOIN (tanpa harga)
            String sql = "SELECT t.nama_kereta, r.stasiun_tujuan_nama, tc.kode_kelas, "
                    + "s.waktu_keberangkatan, s.sisa_kursi "
                    + "FROM schedules s "
                    + "JOIN trains t ON s.id_kereta = t.id_kereta "
                    + "JOIN routes r ON s.id_rute = r.id_rute "
                    + "JOIN train_classes tc ON s.id_kelas = tc.id_kelas "
                    + "ORDER BY s.waktu_keberangkatan ASC";

            // --- PERUBAHAN DI SINI ---
            // 1. Panggil metode connect() yang ada di kelas koneksi Anda
            koneksi.connect();
            // 2. Ambil koneksi dari variabel publik 'con'
            Connection conn = koneksi.con;
            // --- AKHIR PERUBAHAN ---

            // Pastikan koneksi tidak null sebelum melanjutkan
            if (conn != null) {
                Statement stm = conn.createStatement();
                ResultSet res = stm.executeQuery(sql);

                // Mengisi model dengan data dari ResultSet
                while (res.next()) {
                    model.addRow(new Object[]{
                        no++,
                        res.getString("nama_kereta"),
                        res.getString("stasiun_tujuan_nama"),
                        res.getString("kode_kelas"),
                        res.getString("waktu_keberangkatan"),
                        res.getInt("sisa_kursi"), //                        res.getString("train_code")
                    });
                }
                // Mengatur model yang sudah diisi ke jTable1
                jTable1.setModel(model);
            } else {
                JOptionPane.showMessageDialog(this, "Koneksi ke database null, tidak dapat memuat data.");
            }

        } catch (SQLException e) {
            logger.log(java.util.logging.Level.SEVERE, "Error memuat data tabel: " + e.getMessage());
            JOptionPane.showMessageDialog(this, "Gagal memuat data dari database: " + e.getMessage());
        }
    }

    /**
     * Creates new form jAvailabelDate
     */
    public jAvailabelDate() {
        initComponents();
        // Memanggil metode load_Table() saat form dibuat
        load_Table();
        // Mengatur properti tambahan untuk tampilan tabel
        jTable1.getTableHeader().setFont(new java.awt.Font("Segoe UI", java.awt.Font.BOLD, 14));
        jTable1.setRowHeight(25);
        jTable1.setAutoCreateRowSorter(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        BGround = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1728, 1117));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(152, 197, 1430, 730));

        BGround.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Available date.png"))); // NOI18N
        getContentPane().add(BGround, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 6, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new jAvailabelDate().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel BGround;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
